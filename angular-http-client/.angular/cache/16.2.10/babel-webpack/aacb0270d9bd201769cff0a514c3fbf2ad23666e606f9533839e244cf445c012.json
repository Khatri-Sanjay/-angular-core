{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptorService {\n  intercept(req, next) {\n    const modifiedRequest = req.clone({\n      headers: req.headers.append('auth', 'abcdef')\n    });\n    console.log('Auth interceptor called');\n    return next.handle(modifiedRequest);\n  }\n  static #_ = this.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthInterceptorService","intercept","req","next","modifiedRequest","clone","headers","append","console","log","handle","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\angular practise\\Practise\\angular-http-client\\src\\app\\Service\\auth-interceptor.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthInterceptorService implements HttpInterceptor{\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const modifiedRequest = req.clone({headers: req.headers.append('auth', 'abcdef')});\r\n        console.log('Auth interceptor called');\r\n        return next.handle(modifiedRequest);\r\n    }\r\n}\r\n"],"mappings":";AAOA,OAAM,MAAOA,sBAAsB;EAE/BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,eAAe,GAAGF,GAAG,CAACG,KAAK,CAAC;MAACC,OAAO,EAAEJ,GAAG,CAACI,OAAO,CAACC,MAAM,CAAC,MAAM,EAAE,QAAQ;IAAC,CAAC,CAAC;IAClFC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,OAAON,IAAI,CAACO,MAAM,CAACN,eAAe,CAAC;EACvC;EAAC,QAAAO,CAAA,G;qBANQX,sBAAsB;EAAA;EAAA,QAAAY,EAAA,G;WAAtBZ,sBAAsB;IAAAa,OAAA,EAAtBb,sBAAsB,CAAAc,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}