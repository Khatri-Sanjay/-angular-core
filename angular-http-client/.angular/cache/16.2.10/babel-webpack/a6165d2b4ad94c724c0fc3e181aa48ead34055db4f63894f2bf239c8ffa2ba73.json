{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nexport class LoggingService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  static #_ = this.API = 'https://task-management-def88-default-rtdb.firebaseio.com/';\n  getApi() {\n    return LoggingService.API;\n  }\n  logError(data) {\n    this.http.post(this.getApi(), data).subscribe();\n  }\n  fetchErrors() {\n    this.http.get(this.getApi()).subscribe(data => {\n      console.log('Error Occur, ', data);\n    });\n  }\n  static #_2 = this.ɵfac = function LoggingService_Factory(t) {\n    return new (t || LoggingService)();\n  };\n  static #_3 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoggingService,\n    factory: LoggingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","LoggingService","constructor","http","_","API","getApi","logError","data","post","subscribe","fetchErrors","get","console","log","_2","_3","factory","ɵfac","providedIn"],"sources":["D:\\angular practise\\Practise\\angular-http-client\\src\\app\\Service\\logging.service.ts"],"sourcesContent":["import {inject, Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggingService {\r\n\r\n    static API = 'https://task-management-def88-default-rtdb.firebaseio.com/';\r\n\r\n    private http = inject(HttpClient);\r\n\r\n    protected getApi(): string {\r\n        return LoggingService.API;\r\n    }\r\n\r\n    logError(data: {statusCode: number, errorMessage: string, dateTime: Date}) {\r\n        this.http.post(this.getApi(), data).subscribe();\r\n    }\r\n\r\n    fetchErrors() {\r\n        this.http.get(this.getApi()).subscribe((data) => {\r\n            console.log('Error Occur, ', data);\r\n        });\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAAQA,MAAM,QAAmB,eAAe;AAChD,SAAQC,UAAU,QAAO,sBAAsB;;AAK/C,OAAM,MAAOC,cAAc;EAH3BC,YAAA;IAOY,KAAAC,IAAI,GAAGJ,MAAM,CAACC,UAAU,CAAC;;EAepC,QAAAI,CAAA,GAjBU,KAAAC,GAAG,GAAG,4DAA4D;EAI/DC,MAAMA,CAAA;IACZ,OAAOL,cAAc,CAACI,GAAG;EAC7B;EAEAE,QAAQA,CAACC,IAAgE;IACrE,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,MAAM,EAAE,EAAEE,IAAI,CAAC,CAACE,SAAS,EAAE;EACnD;EAEAC,WAAWA,CAAA;IACP,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,IAAI,CAACN,MAAM,EAAE,CAAC,CAACI,SAAS,CAAEF,IAAI,IAAI;MAC5CK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,IAAI,CAAC;IACtC,CAAC,CAAC;EACN;EAAC,QAAAO,EAAA,G;qBAlBQd,cAAc;EAAA;EAAA,QAAAe,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}