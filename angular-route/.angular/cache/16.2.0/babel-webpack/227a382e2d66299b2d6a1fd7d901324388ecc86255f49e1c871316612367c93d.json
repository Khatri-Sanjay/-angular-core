{"ast":null,"code":"var _class;\nimport { inject } from '@angular/core';\nimport { UserService } from \"./user.service\";\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isLogged = false;\n    this.userService = inject(UserService);\n  }\n  logIn(username, password) {\n    let user = this.userService.users.find(user => user.username === username && user.password === password);\n    if (user === undefined) {\n      this.isLogged = false;\n    } else {\n      this.isLogged = true;\n    }\n    return user;\n  }\n  logOut() {\n    this.isLogged = false;\n  }\n  IsAuthenticate() {\n    return this.isLogged;\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","UserService","AuthService","constructor","isLogged","userService","logIn","username","password","user","users","find","undefined","logOut","IsAuthenticate","factory","ɵfac","providedIn"],"sources":["D:\\angular practise\\Practise\\angular-route\\src\\app\\Services\\auth.service.ts"],"sourcesContent":["import {inject, Injectable} from '@angular/core';\nimport {UserService} from \"./user.service\";\nimport {User} from \"../Models/user\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    isLogged: boolean = false;\n\n    userService: UserService = inject(UserService);\n\n\n    logIn(username: string, password: string) {\n        let user = this.userService.users.find(\n            (user: User) => user.username === username && user.password === password\n        );\n\n        if (user === undefined) {\n          this.isLogged = false;\n        } else {\n          this.isLogged = true;\n        }\n        return user;\n    }\n\n    logOut() {\n      this.isLogged = false;\n    }\n\n    IsAuthenticate() {\n      return this.isLogged;\n    }\n}\n"],"mappings":";AAAA,SAAQA,MAAM,QAAmB,eAAe;AAChD,SAAQC,WAAW,QAAO,gBAAgB;;AAM1C,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAKI,KAAAC,QAAQ,GAAY,KAAK;IAEzB,KAAAC,WAAW,GAAgBL,MAAM,CAACC,WAAW,CAAC;;EAG9CK,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACpC,IAAIC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACC,IAAI,CACjCF,IAAU,IAAKA,IAAI,CAACF,QAAQ,KAAKA,QAAQ,IAAIE,IAAI,CAACD,QAAQ,KAAKA,QAAQ,CAC3E;IAED,IAAIC,IAAI,KAAKG,SAAS,EAAE;MACtB,IAAI,CAACR,QAAQ,GAAG,KAAK;KACtB,MAAM;MACL,IAAI,CAACA,QAAQ,GAAG,IAAI;;IAEtB,OAAOK,IAAI;EACf;EAEAI,MAAMA,CAAA;IACJ,IAAI,CAACT,QAAQ,GAAG,KAAK;EACvB;EAEAU,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACV,QAAQ;EACtB;;SA1BSF,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAa,OAAA,EAAXb,MAAW,CAAAc,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}