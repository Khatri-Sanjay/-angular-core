{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormGroup } from \"@angular/forms\";\nimport { AuthService } from \"../Services/auth.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../utility/loader/loader.component\";\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.loginForm = new FormGroup({});\n    this.isLoginMode = true;\n    this.authService = inject(AuthService);\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.loginForm = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n  onSubmit() {\n    const email = this.loginForm.get('email').value;\n    const password = this.loginForm.get('password').value;\n    console.log(this.loginForm.value);\n    if (this.isLoginMode) {} else {\n      this.authService.signUp(email, password).subscribe({\n        next: res => {\n          console.log('res', res);\n        },\n        error: err => {\n          console.log('err', err);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[1, \"app-login-form\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-input\"], [\"type\", \"email\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"minlength\", \"8\"], [\"type\", \"submit\", 1, \"app-login-btn\"], [1, \"app-toggle-btn\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"app-loader\");\n        i0.ɵɵelementStart(4, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\");\n        i0.ɵɵtext(7, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementStart(17, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.onSwitchMode();\n        });\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login Here\" : \"Sign Up Here\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isLoginMode ? \"Login\" : \"Sign Up\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isLoginMode ? \"Do not have an accout yet ?\" : \"Already Have an account\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isLoginMode ? \"Register Here.\" : \"Sign Up Here\", \" \");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.FormGroupDirective, i1.FormControlName, i2.LoaderComponent],\n    styles: [\".app-login-form[_ngcontent-%COMP%]{\\n    width: 520px;\\n    height: 360px;\\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\\n    padding: 30px 30px;\\n    border-radius: 10px;\\n    margin: 75px auto;\\n}\\n.form-input[_ngcontent-%COMP%]{\\n    margin-top: 10px;\\n}\\n.form-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n    width: 100%;   \\n    height: 40px; \\n    border: #eee 2px solid;\\n    padding: 0px 20px;\\n}\\n.app-login-btn[_ngcontent-%COMP%]{\\n    width: 100%;\\n    border: none;\\n    padding: 15px;\\n    margin: 15px 0px;\\n    background-color: #28282B;\\n    color: white;\\n}\\n.app-toggle-btn[_ngcontent-%COMP%]{\\n    border: none;\\n    font-size: 16px;\\n    background-color: transparent;\\n    color: #0e0ede;\\n    cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsNENBQTRDO0lBQzVDLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osZUFBZTtJQUNmLDZCQUE2QjtJQUM3QixjQUFjO0lBQ2QsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtbG9naW4tZm9ybXtcclxuICAgIHdpZHRoOiA1MjBweDtcclxuICAgIGhlaWdodDogMzYwcHg7XHJcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMzUpIDBweCA1cHggMTVweDtcclxuICAgIHBhZGRpbmc6IDMwcHggMzBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBtYXJnaW46IDc1cHggYXV0bztcclxufVxyXG4uZm9ybS1pbnB1dHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLmZvcm0taW5wdXQgaW5wdXR7XHJcbiAgICB3aWR0aDogMTAwJTsgICBcclxuICAgIGhlaWdodDogNDBweDsgXHJcbiAgICBib3JkZXI6ICNlZWUgMnB4IHNvbGlkO1xyXG4gICAgcGFkZGluZzogMHB4IDIwcHg7XHJcbn1cclxuLmFwcC1sb2dpbi1idG57XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW46IDE1cHggMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4MjgyQjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4uYXBwLXRvZ2dsZS1idG57XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAjMGUwZWRlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","FormGroup","AuthService","LoginComponent","constructor","formBuilder","loginForm","isLoginMode","authService","onSwitchMode","ngOnInit","buildForm","group","email","password","onSubmit","get","value","console","log","signUp","subscribe","next","res","error","err","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵtextInterpolate1"],"sources":["D:\\angular practise\\Practise\\angular-auth\\src\\app\\login\\login.component.ts","D:\\angular practise\\Practise\\angular-auth\\src\\app\\login\\login.component.html"],"sourcesContent":["import {Component, inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {AuthService} from \"../Services/auth.service\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit{\r\n\r\n    loginForm: FormGroup = new FormGroup({});\r\n\r\n    isLoginMode = true;\r\n\r\n    authService: AuthService = inject(AuthService);\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder\r\n    ) {\r\n    }\r\n\r\n    onSwitchMode() {\r\n        this.isLoginMode = !this.isLoginMode;\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.buildForm();\r\n    }\r\n\r\n    buildForm() {\r\n      this.loginForm = this.formBuilder.group({\r\n        email: '',\r\n        password: ''\r\n      });\r\n    }\r\n\r\n    onSubmit() {\r\n        const email = this.loginForm.get('email').value;\r\n        const password = this.loginForm.get('password').value;\r\n        console.log(this.loginForm.value);\r\n        if (this.isLoginMode) {\r\n\r\n        } else {\r\n            this.authService.signUp(email, password).subscribe({\r\n                next: (res) => {\r\n                    console.log('res', res);\r\n                },\r\n                error: (err) => {\r\n                    console.log('err', err);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"app-login-form\">\r\n    <h2>{{ isLoginMode ? 'Login Here' : 'Sign Up Here' }}</h2>\r\n    <app-loader></app-loader>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-input\">\r\n            <label>Email Address</label>\r\n            <input type=\"email\" placeholder=\"Email address\"\r\n                   formControlName=\"email\" required\r\n            >\r\n        </div>\r\n        <div class=\"form-input\">\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"Password\"\r\n                   formControlName=\"password\"\r\n                   minlength=\"8\"\r\n            >\r\n        </div>\r\n        <button type=\"submit\" class=\"app-login-btn\">\r\n            {{ isLoginMode ? 'Login' : 'Sign Up' }}\r\n        </button>\r\n        <p>{{ isLoginMode ? 'Do not have an accout yet ?' : 'Already Have an account' }}\r\n            <button class=\"app-toggle-btn\" (click)=\"onSwitchMode()\">\r\n                {{ isLoginMode ? 'Register Here.' : 'Sign Up Here' }}\r\n            </button>\r\n        </p>\r\n    </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}