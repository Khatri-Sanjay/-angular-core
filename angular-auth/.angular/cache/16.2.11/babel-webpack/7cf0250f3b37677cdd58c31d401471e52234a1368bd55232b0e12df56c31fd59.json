{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { FormGroup } from \"@angular/forms\";\nimport { AuthService } from \"../Services/auth.service\";\nimport { Router } from \"@angular/router\";\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.loginForm = new FormGroup({});\n    this.isLoginMode = true;\n    this.isLoading = false;\n    this.authService = inject(AuthService);\n    this.router = inject(Router);\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.loginForm = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n  onSubmit() {\n    this.isLoading = true;\n    const email = this.loginForm.get('email').value;\n    const password = this.loginForm.get('password').value;\n    console.log(this.loginForm.value);\n    if (this.isLoginMode) {\n      this.authService.logIn(email, password).subscribe({\n        next: res => {\n          console.log('res', res);\n          this.isLoading = false;\n          this.router.navigate(['/dashboard/overview']);\n        },\n        error: err => {\n          this.isLoading = false;\n          this.errorMessage = err;\n          console.log('err', err);\n          this.hideSnackBar();\n        }\n      });\n    } else {\n      this.authService.signUp(email, password).subscribe({\n        next: res => {\n          console.log('res', res);\n          this.isLoading = false;\n          this.isLoginMode = !this.isLoginMode;\n        },\n        error: err => {\n          this.isLoading = false;\n          this.errorMessage = err;\n          console.log('err', err);\n          this.hideSnackBar();\n        }\n      });\n    }\n  }\n  hideSnackBar() {\n    setTimeout(() => {\n      this.errorMessage = null;\n    }, 3000);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","inject","FormGroup","AuthService","Router","LoginComponent","constructor","formBuilder","loginForm","isLoginMode","isLoading","authService","router","onSwitchMode","ngOnInit","buildForm","group","email","password","onSubmit","get","value","console","log","logIn","subscribe","next","res","navigate","error","err","errorMessage","hideSnackBar","signUp","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\angular practise\\Practise\\angular-auth\\src\\app\\login\\login.component.ts"],"sourcesContent":["import {Component, inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {AuthService} from \"../Services/auth.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit{\r\n\r\n    loginForm: FormGroup = new FormGroup({});\r\n\r\n    isLoginMode = true;\r\n    isLoading = false;\r\n\r\n    errorMessage: string;\r\n\r\n    authService: AuthService = inject(AuthService);\r\n    router: Router = inject(Router);\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder\r\n    ) {\r\n    }\r\n\r\n    onSwitchMode() {\r\n        this.isLoginMode = !this.isLoginMode;\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.buildForm();\r\n    }\r\n\r\n    buildForm() {\r\n      this.loginForm = this.formBuilder.group({\r\n        email: '',\r\n        password: ''\r\n      });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.isLoading = true;\r\n        const email = this.loginForm.get('email').value;\r\n        const password = this.loginForm.get('password').value;\r\n        console.log(this.loginForm.value);\r\n        if (this.isLoginMode) {\r\n            this.authService.logIn(email, password).subscribe({\r\n                next: (res) => {\r\n                    console.log('res', res);\r\n                    this.isLoading = false;\r\n                    this.router.navigate(['/dashboard/overview']);\r\n                },\r\n                error: (err) => {\r\n                    this.isLoading = false;\r\n                    this.errorMessage = err;\r\n                    console.log('err', err);\r\n                    this.hideSnackBar();\r\n                }\r\n            });\r\n        } else {\r\n            this.authService.signUp(email, password).subscribe({\r\n                next: (res) => {\r\n                    console.log('res', res);\r\n                    this.isLoading = false;\r\n                    this.isLoginMode = !this.isLoginMode;\r\n                },\r\n                error: (err) => {\r\n                    this.isLoading = false;\r\n                    this.errorMessage = err;\r\n                    console.log('err', err);\r\n                    this.hideSnackBar();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    hideSnackBar() {\r\n        setTimeout(() => {\r\n            this.errorMessage = null;\r\n        }, 3000);\r\n    }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}