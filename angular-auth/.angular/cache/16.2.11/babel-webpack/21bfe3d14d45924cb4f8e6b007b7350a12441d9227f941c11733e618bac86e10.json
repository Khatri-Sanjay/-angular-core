{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CounterService {\n  constructor() {\n    this.counter = 0;\n  }\n  increment(componentName) {\n    console.log(componentName + ':' + this.counter++);\n  }\n  static #_ = this.ɵfac = function CounterService_Factory(t) {\n    return new (t || CounterService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CounterService,\n    factory: CounterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CounterService","constructor","counter","increment","componentName","console","log","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\angular practise\\Practise\\angular-auth\\src\\app\\Services\\counter.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CounterService {\r\n    counter: number = 0;\r\n\r\n    increment(componentName: string) {\r\n        console.log(componentName + ':' + this.counter++);\r\n    }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EAH3BC,YAAA;IAII,KAAAC,OAAO,GAAW,CAAC;;EAEnBC,SAASA,CAACC,aAAqB;IAC3BC,OAAO,CAACC,GAAG,CAACF,aAAa,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EACrD;EAAC,QAAAK,CAAA,G;qBALQP,cAAc;EAAA;EAAA,QAAAQ,EAAA,G;WAAdR,cAAc;IAAAS,OAAA,EAAdT,cAAc,CAAAU,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}