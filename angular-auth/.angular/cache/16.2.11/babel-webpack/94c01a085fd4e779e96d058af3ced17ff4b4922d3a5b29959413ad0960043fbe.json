{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TaskService } from '../Services/task.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./create-task/create-task.component\";\nimport * as i3 from \"./task-details/task-details.component\";\nimport * as i4 from \"../utility/loader/loader.component\";\nimport * as i5 from \"../utility/snackbar/snackbar.component\";\nfunction DashboardComponent_app_create_task_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-create-task\", 11);\n    i0.ɵɵlistener(\"CloseForm\", function DashboardComponent_app_create_task_0_Template_app_create_task_CloseForm_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.CloseCreateTaskForm());\n    })(\"EmitTaskData\", function DashboardComponent_app_create_task_0_Template_app_create_task_EmitTaskData_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.CreateOrUpdateTask($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"isEditMode\", ctx_r0.editMode)(\"selectedTask\", ctx_r0.selectedTask);\n  }\n}\nfunction DashboardComponent_app_task_details_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-task-details\", 12);\n    i0.ɵɵlistener(\"CloseDetailView\", function DashboardComponent_app_task_details_1_Template_app_task_details_CloseDetailView_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.CloseTaskDetails());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"currentTask\", ctx_r1.currentTask);\n  }\n}\nfunction DashboardComponent_app_loader_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\nfunction DashboardComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h2\");\n    i0.ɵɵtext(2, \"No task has been created yet!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardComponent_ng_container_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\")(5, \"b\");\n    i0.ɵɵtext(6, \"Assigned to: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\")(9, \"b\");\n    i0.ɵɵtext(10, \"Priority: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\")(13, \"b\");\n    i0.ɵɵtext(14, \"Status: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 17)(17, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_ng_container_19_div_1_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const task_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.showCurrentTaskDetails(task_r11.id));\n    });\n    i0.ɵɵelement(18, \"i\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_ng_container_19_div_1_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const task_r11 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.OnEditTaskClicked(task_r11.id));\n    });\n    i0.ɵɵelement(20, \"i\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_ng_container_19_div_1_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const task_r11 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.DeleteTask(task_r11.id));\n    });\n    i0.ɵɵelement(22, \"i\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"task-\" + task_r11.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r11.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r11.assignedTo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r11.priority);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r11.status);\n  }\n}\nfunction DashboardComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DashboardComponent_ng_container_19_div_1_Template, 23, 5, \"div\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.allTasks);\n  }\n}\nexport class DashboardComponent {\n  constructor() {\n    this.showCreateTaskForm = false;\n    this.showTaskDetails = false;\n    this.http = inject(HttpClient);\n    this.allTasks = [];\n    this.taskService = inject(TaskService);\n    this.currentTaskId = '';\n    this.isLoading = false;\n    this.currentTask = null;\n    this.errorMessage = null;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.fetchAllTasks();\n    this.errorSub = this.taskService.errorSubject.subscribe({\n      next: httpError => {\n        this.setErrorMessage(httpError);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.errorSub.unsubscribe();\n  }\n  OpenCreateTaskForm() {\n    this.showCreateTaskForm = true;\n    this.editMode = false;\n    this.selectedTask = {\n      title: '',\n      desc: '',\n      assignedTo: '',\n      createdAt: '',\n      priority: '',\n      status: ''\n    };\n  }\n  showCurrentTaskDetails(id) {\n    this.showTaskDetails = true;\n    this.taskService.getTaskDetails(id).subscribe({\n      next: data => {\n        this.currentTask = data;\n      }\n    });\n  }\n  CloseTaskDetails() {\n    this.showTaskDetails = false;\n  }\n  CloseCreateTaskForm() {\n    this.showCreateTaskForm = false;\n  }\n  CreateOrUpdateTask(data) {\n    if (!this.editMode) this.taskService.CreateTask(data);else this.taskService.UpdateTask(this.currentTaskId, data);\n  }\n  /*{\n    key1: {},\n    key2: {}\n  }*/\n  FetchAllTaskClicked() {\n    this.fetchAllTasks();\n  }\n  fetchAllTasks() {\n    this.isLoading = true;\n    this.taskService.GetAlltasks().subscribe({\n      next: tasks => {\n        this.allTasks = tasks;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.setErrorMessage(error);\n        this.isLoading = false;\n      }\n    });\n  }\n  setErrorMessage(err) {\n    if (err.error.error === 'Permission denied') {\n      this.errorMessage = 'You do not have permisssion to perform this action';\n    } else {\n      this.errorMessage = err.message;\n    }\n    setTimeout(() => {\n      this.errorMessage = null;\n    }, 3000);\n  }\n  DeleteTask(id) {\n    this.taskService.DeleteTask(id);\n  }\n  DeleteAllTask() {\n    this.taskService.DeleteAllTasks();\n  }\n  OnEditTaskClicked(id) {\n    this.currentTaskId = id;\n    //OPEN EDIT TASK FORM\n    this.showCreateTaskForm = true;\n    this.editMode = true;\n    this.selectedTask = this.allTasks.find(task => {\n      return task.id === id;\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 20,\n    vars: 6,\n    consts: [[3, \"isEditMode\", \"selectedTask\", \"CloseForm\", \"EmitTaskData\", 4, \"ngIf\"], [3, \"currentTask\", \"CloseDetailView\", 4, \"ngIf\"], [1, \"dashboard-container\"], [2, \"display\", \"flex\"], [2, \"width\", \"50%\"], [2, \"width\", \"50%\", \"text-align\", \"right\"], [1, \"create-task-btn\", 3, \"click\"], [1, \"dashboard-item-container\"], [3, \"errorMessage\"], [4, \"ngIf\"], [\"style\", \"text-align: center;\", 4, \"ngIf\"], [3, \"isEditMode\", \"selectedTask\", \"CloseForm\", \"EmitTaskData\"], [3, \"currentTask\", \"CloseDetailView\"], [2, \"text-align\", \"center\"], [\"class\", \"task-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"task-item\", 3, \"ngClass\"], [1, \"task-title\"], [1, \"task-action-icons\"], [\"title\", \"Detail\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-info-circle\"], [\"title\", \"Edit\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-pencil-square-o\"], [\"title\", \"Delete\", 1, \"task-action-btn\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DashboardComponent_app_create_task_0_Template, 1, 2, \"app-create-task\", 0);\n        i0.ɵɵtemplate(1, DashboardComponent_app_task_details_1_Template, 1, 1, \"app-task-details\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n        i0.ɵɵtext(6, \"Dashboard\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_8_listener() {\n          return ctx.OpenCreateTaskForm();\n        });\n        i0.ɵɵtext(9, \"Create Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_10_listener() {\n          return ctx.FetchAllTaskClicked();\n        });\n        i0.ɵɵtext(11, \"Fetch Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_12_listener() {\n          return ctx.DeleteAllTask();\n        });\n        i0.ɵɵtext(13, \"Clear Tasks\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"hr\");\n        i0.ɵɵelementStart(15, \"div\", 7);\n        i0.ɵɵelement(16, \"app-snackbar\", 8);\n        i0.ɵɵtemplate(17, DashboardComponent_app_loader_17_Template, 1, 0, \"app-loader\", 9);\n        i0.ɵɵtemplate(18, DashboardComponent_div_18_Template, 3, 0, \"div\", 10);\n        i0.ɵɵtemplate(19, DashboardComponent_ng_container_19_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showCreateTaskForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTaskDetails);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"errorMessage\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.allTasks.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.CreateTaskComponent, i3.TaskDetailsComponent, i4.LoaderComponent, i5.SnackbarComponent],\n    styles: [\".dashboard-container[_ngcontent-%COMP%]{\\n    padding: 30px 100px;\\n}\\n\\nhr[_ngcontent-%COMP%]{\\n    border: #dedede 1.5px solid;\\n    margin: 20px 0px;\\n}\\n.dashboard-item-container[_ngcontent-%COMP%]{\\n    margin-top: 30px;\\n    padding: 30px 50px;\\n    border: #dedede 1.5px solid;\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n\\n\\n.task-action-icons[_ngcontent-%COMP%]{\\n    text-align: right;\\n}\\n.task-action-btn[_ngcontent-%COMP%]{\\n    margin: 0px 5px;\\n    border: none;\\n    background-color: transparent;\\n}\\n\\ni[_ngcontent-%COMP%]{\\n    font-size: 16px;\\n}\\n\\n.task-item[_ngcontent-%COMP%]{\\n    width: 23%;\\n    margin: 10px 10px;\\n    padding: 15px 30px;\\n    background-color: #fff;\\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\\n    border-radius: 3px;\\n    font-size: 14px;\\n}\\n.task-complete[_ngcontent-%COMP%]{\\n    border-top: green 10px solid;\\n}\\n.task-in-progress[_ngcontent-%COMP%]{\\n    border-top: orange 10px solid;\\n}\\n.task-started[_ngcontent-%COMP%]{\\n    border-top: #3498DB 10px solid;\\n}\\n.task-open[_ngcontent-%COMP%]{\\n    border-top: red 10px solid;\\n}\\n.task-title[_ngcontent-%COMP%]{\\n    border-bottom: #28282B 2px solid;\\n}\\n\\n.create-task-btn[_ngcontent-%COMP%]{\\n    padding: 10px 20px;\\n    background-color: #28282B;\\n    border: #cdcdcd 1px solid;\\n    color: white;\\n    margin: 0px 2px;\\n    border-radius: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsYUFBYTtJQUNiLGVBQWU7QUFDbkI7OztBQUdBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsNENBQTRDO0lBQzVDLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7QUFDQTtJQUNJLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksOEJBQThCO0FBQ2xDO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixlQUFlO0lBQ2YsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmRhc2hib2FyZC1jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDEwMHB4O1xyXG59XHJcblxyXG5ocntcclxuICAgIGJvcmRlcjogI2RlZGVkZSAxLjVweCBzb2xpZDtcclxuICAgIG1hcmdpbjogMjBweCAwcHg7XHJcbn1cclxuLmRhc2hib2FyZC1pdGVtLWNvbnRhaW5lcntcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBwYWRkaW5nOiAzMHB4IDUwcHg7XHJcbiAgICBib3JkZXI6ICNkZWRlZGUgMS41cHggc29saWQ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG5cclxuLnRhc2stYWN0aW9uLWljb25ze1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn1cclxuLnRhc2stYWN0aW9uLWJ0bntcclxuICAgIG1hcmdpbjogMHB4IDVweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG5pe1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4udGFzay1pdGVte1xyXG4gICAgd2lkdGg6IDIzJTtcclxuICAgIG1hcmdpbjogMTBweCAxMHB4O1xyXG4gICAgcGFkZGluZzogMTVweCAzMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4zNSkgMHB4IDVweCAxNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbi50YXNrLWNvbXBsZXRle1xyXG4gICAgYm9yZGVyLXRvcDogZ3JlZW4gMTBweCBzb2xpZDtcclxufVxyXG4udGFzay1pbi1wcm9ncmVzc3tcclxuICAgIGJvcmRlci10b3A6IG9yYW5nZSAxMHB4IHNvbGlkO1xyXG59XHJcbi50YXNrLXN0YXJ0ZWR7XHJcbiAgICBib3JkZXItdG9wOiAjMzQ5OERCIDEwcHggc29saWQ7XHJcbn1cclxuLnRhc2stb3BlbntcclxuICAgIGJvcmRlci10b3A6IHJlZCAxMHB4IHNvbGlkO1xyXG59XHJcbi50YXNrLXRpdGxle1xyXG4gICAgYm9yZGVyLWJvdHRvbTogIzI4MjgyQiAycHggc29saWQ7XHJcbn1cclxuXHJcbi5jcmVhdGUtdGFzay1idG57XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjgyODJCO1xyXG4gICAgYm9yZGVyOiAjY2RjZGNkIDFweCBzb2xpZDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIG1hcmdpbjogMHB4IDJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","HttpClient","TaskService","i0","ɵɵelementStart","ɵɵlistener","DashboardComponent_app_create_task_0_Template_app_create_task_CloseForm_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","CloseCreateTaskForm","DashboardComponent_app_create_task_0_Template_app_create_task_EmitTaskData_0_listener","$event","ctx_r7","CreateOrUpdateTask","ɵɵelementEnd","ɵɵproperty","ctx_r0","editMode","selectedTask","DashboardComponent_app_task_details_1_Template_app_task_details_CloseDetailView_0_listener","_r9","ctx_r8","CloseTaskDetails","ctx_r1","currentTask","ɵɵelement","ɵɵtext","DashboardComponent_ng_container_19_div_1_Template_button_click_17_listener","restoredCtx","_r13","task_r11","$implicit","ctx_r12","showCurrentTaskDetails","id","DashboardComponent_ng_container_19_div_1_Template_button_click_19_listener","ctx_r14","OnEditTaskClicked","DashboardComponent_ng_container_19_div_1_Template_button_click_21_listener","ctx_r15","DeleteTask","status","ɵɵadvance","ɵɵtextInterpolate","title","assignedTo","priority","ɵɵelementContainerStart","ɵɵtemplate","DashboardComponent_ng_container_19_div_1_Template","ɵɵelementContainerEnd","ctx_r4","allTasks","DashboardComponent","constructor","showCreateTaskForm","showTaskDetails","http","taskService","currentTaskId","isLoading","errorMessage","ngOnInit","fetchAllTasks","errorSub","errorSubject","subscribe","next","httpError","setErrorMessage","ngOnDestroy","unsubscribe","OpenCreateTaskForm","desc","createdAt","getTaskDetails","data","CreateTask","UpdateTask","FetchAllTaskClicked","GetAlltasks","tasks","error","err","message","setTimeout","DeleteAllTask","DeleteAllTasks","find","task","_","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_app_create_task_0_Template","DashboardComponent_app_task_details_1_Template","DashboardComponent_Template_button_click_8_listener","DashboardComponent_Template_button_click_10_listener","DashboardComponent_Template_button_click_12_listener","DashboardComponent_app_loader_17_Template","DashboardComponent_div_18_Template","DashboardComponent_ng_container_19_Template","length"],"sources":["D:\\angular practise\\Practise\\angular-auth\\src\\app\\dashboard\\dashboard.component.ts","D:\\angular practise\\Practise\\angular-auth\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { Task } from '../Model/Task';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { TaskService } from '../Services/task.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit{\r\n  showCreateTaskForm: boolean = false;\r\n  showTaskDetails: boolean = false;\r\n  http: HttpClient = inject(HttpClient)\r\n  allTasks: Task[] = [];\r\n  taskService: TaskService = inject(TaskService);\r\n  currentTaskId: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  currentTask: Task | null = null;\r\n\r\n  errorMessage: string | null = null;\r\n\r\n  editMode: boolean = false;\r\n  selectedTask: Task;\r\n\r\n  errorSub: Subscription\r\n\r\n  ngOnInit(){\r\n    this.fetchAllTasks();\r\n    this.errorSub = this.taskService.errorSubject.subscribe({next: (httpError) => {\r\n      this.setErrorMessage(httpError);\r\n    }})\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.errorSub.unsubscribe();\r\n  }\r\n\r\n  OpenCreateTaskForm(){\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = false;\r\n    this.selectedTask = {title: '', desc: '', assignedTo: '', createdAt: '', priority: '', status: ''}\r\n  }\r\n\r\n  showCurrentTaskDetails(id: string | undefined){\r\n    this.showTaskDetails = true;\r\n    this.taskService.getTaskDetails(id).subscribe({next: (data: Task) => {\r\n      this.currentTask = data;\r\n    }});\r\n  }\r\n\r\n  CloseTaskDetails(){\r\n    this.showTaskDetails = false;\r\n  }\r\n\r\n  CloseCreateTaskForm(){\r\n    this.showCreateTaskForm = false;\r\n  }\r\n\r\n  CreateOrUpdateTask(data: Task){\r\n    if(!this.editMode)\r\n      this.taskService.CreateTask(data);\r\n    else\r\n      this.taskService.UpdateTask(this.currentTaskId, data);\r\n  }\r\n\r\n  /*{\r\n    key1: {},\r\n    key2: {}\r\n  }*/\r\n\r\n  FetchAllTaskClicked(){\r\n    this.fetchAllTasks()\r\n  }\r\n\r\n  private fetchAllTasks(){\r\n    this.isLoading = true;\r\n    this.taskService.GetAlltasks().subscribe({next: (tasks) => {\r\n      this.allTasks = tasks;\r\n      this.isLoading = false;\r\n    }, error: (error) => {\r\n      this.setErrorMessage(error);\r\n      this.isLoading = false;\r\n    }})\r\n  }\r\n\r\n  private setErrorMessage(err: HttpErrorResponse){\r\n    if(err.error.error === 'Permission denied'){\r\n      this.errorMessage = 'You do not have permisssion to perform this action';\r\n    }\r\n    else{\r\n      this.errorMessage = err.message;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.errorMessage = null;\r\n    }, 3000);\r\n  }\r\n\r\n  DeleteTask(id: string | undefined){\r\n    this.taskService.DeleteTask(id);\r\n  }\r\n\r\n  DeleteAllTask(){\r\n    this.taskService.DeleteAllTasks();\r\n  }\r\n\r\n  OnEditTaskClicked(id: string | undefined){\r\n    this.currentTaskId = id;\r\n    \r\n    //OPEN EDIT TASK FORM\r\n    this.showCreateTaskForm = true;\r\n    this.editMode = true;\r\n\r\n    this.selectedTask = this.allTasks.find((task) => {return task.id === id})\r\n  }\r\n}\r\n","<app-create-task \r\n        *ngIf=\"showCreateTaskForm\" \r\n        (CloseForm)=\"CloseCreateTaskForm()\"\r\n        (EmitTaskData)=\"CreateOrUpdateTask($event)\"\r\n        [isEditMode]=\"editMode\"\r\n        [selectedTask]=\"selectedTask\"\r\n    >\r\n</app-create-task>\r\n\r\n<app-task-details *ngIf=\"showTaskDetails\" \r\n    (CloseDetailView)=\"CloseTaskDetails()\"\r\n    [currentTask]=\"currentTask\"\r\n></app-task-details>\r\n\r\n<div class=\"dashboard-container\">\r\n    <div style=\"display: flex;\">\r\n        <div style=\"width: 50%\">\r\n            <h2>Dashboard</h2>\r\n        </div>\r\n        <div style=\"width: 50%; text-align: right;\">\r\n            <button class=\"create-task-btn\" (click)=\"OpenCreateTaskForm()\">Create Task</button>\r\n            <button class=\"create-task-btn\" (click)=\"FetchAllTaskClicked()\">Fetch Tasks</button>\r\n            <button class=\"create-task-btn\" (click)=\"DeleteAllTask()\">Clear Tasks</button>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class=\"dashboard-item-container\">\r\n        <app-snackbar [errorMessage]=\"errorMessage\"></app-snackbar>\r\n        <app-loader *ngIf=\"isLoading\"></app-loader>\r\n        <div style=\"text-align: center;\" *ngIf=\"allTasks.length < 1\">\r\n            <h2>No task has been created yet!</h2>\r\n        </div>\r\n        <ng-container *ngIf=\"!isLoading\">\r\n            <div class=\"task-item\" [ngClass]=\"'task-' + task.status\" *ngFor=\"let task of allTasks\">\r\n                <div class=\"task-title\">\r\n                    <h3>{{ task.title }}</h3>\r\n                </div>\r\n                <p><b>Assigned to: </b>{{ task.assignedTo }}</p>\r\n                <p><b>Priority: </b>{{ task.priority }}</p>\r\n                <p><b>Status: </b>{{ task.status }}</p>\r\n                <div class=\"task-action-icons\">\r\n                    <button class=\"task-action-btn\" title=\"Detail\" (click)=\"showCurrentTaskDetails(task.id)\">\r\n                        <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <button class=\"task-action-btn\" title=\"Edit\" (click)=\"OnEditTaskClicked(task.id)\">\r\n                        <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <button class=\"task-action-btn\" title=\"Delete\" (click)=\"DeleteTask(task.id)\">\r\n                        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                    </button>            \r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}