{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Environment } from \"../../environment/environment\";\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  static #_ = this.SIGN_UP = Environment.SIGN_UP_API;\n  static #_2 = this.SIGN_IN = Environment.SIGN_IN_API;\n  getSignUP() {\n    return AuthService.SIGN_UP;\n  }\n  getSignIn() {\n    return AuthService.SIGN_IN;\n  }\n  signUp(email, password) {\n    let headers = new HttpHeaders();\n    headers = headers.set('content-type', 'application/json');\n    const data = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDIFu1bx0zeKoQluUS0cSkjRQvqflS51W8', data, {\n      headers: headers\n    });\n  }\n  static #_3 = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_4 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","HttpHeaders","Environment","AuthService","constructor","http","_","SIGN_UP","SIGN_UP_API","_2","SIGN_IN","SIGN_IN_API","getSignUP","getSignIn","signUp","email","password","headers","set","data","returnSecureToken","post","_3","_4","factory","ɵfac","providedIn"],"sources":["D:\\angular practise\\Practise\\angular-auth\\src\\app\\Services\\auth.service.ts"],"sourcesContent":["import {inject, Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {AuthResponse} from \"../Model/auth-response\";\r\nimport {Environment} from \"../../environment/environment\";\r\nimport {LoggingService} from \"./logging.Service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    static SIGN_UP = Environment.SIGN_UP_API;\r\n    static SIGN_IN = Environment.SIGN_IN_API;\r\n\r\n    http: HttpClient = inject(HttpClient);\r\n\r\n    protected getSignUP() {\r\n        return AuthService.SIGN_UP;\r\n    }\r\n\r\n    protected getSignIn() {\r\n        return AuthService.SIGN_IN;\r\n    }\r\n\r\n    signUp(email: any, password: any) {\r\n        let headers = new HttpHeaders();\r\n        headers = headers.set('content-type', 'application/json');\r\n        const data = {email: email, password: password, returnSecureToken: true};\r\n        return this.http.post<AuthResponse>(\r\n            'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDIFu1bx0zeKoQluUS0cSkjRQvqflS51W8',\r\n            data,\r\n            {headers: headers}\r\n        );\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA,SAAQA,MAAM,QAAmB,eAAe;AAChD,SAAQC,UAAU,EAAEC,WAAW,QAAO,sBAAsB;AAE5D,SAAQC,WAAW,QAAO,+BAA+B;;AAMzD,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAQI,KAAAC,IAAI,GAAeN,MAAM,CAACC,UAAU,CAAC;;EAqBxC,QAAAM,CAAA,GAxBU,KAAAC,OAAO,GAAGL,WAAW,CAACM,WAAW;EAAA,QAAAC,EAAA,GACjC,KAAAC,OAAO,GAAGR,WAAW,CAACS,WAAW;EAI9BC,SAASA,CAAA;IACf,OAAOT,WAAW,CAACI,OAAO;EAC9B;EAEUM,SAASA,CAAA;IACf,OAAOV,WAAW,CAACO,OAAO;EAC9B;EAEAI,MAAMA,CAACC,KAAU,EAAEC,QAAa;IAC5B,IAAIC,OAAO,GAAG,IAAIhB,WAAW,EAAE;IAC/BgB,OAAO,GAAGA,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACzD,MAAMC,IAAI,GAAG;MAACJ,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA,QAAQ;MAAEI,iBAAiB,EAAE;IAAI,CAAC;IACxE,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CACjB,uGAAuG,EACvGF,IAAI,EACJ;MAACF,OAAO,EAAEA;IAAO,CAAC,CACrB;EACL;EAAC,QAAAK,EAAA,G;qBAxBQnB,WAAW;EAAA;EAAA,QAAAoB,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}